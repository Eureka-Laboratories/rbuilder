[workspace]
members = [
    "crates/rbuilder",
    "crates/op-rbuilder",
    "crates/op-rbuilder/src/payload_builder",
    "crates/op-rbuilder/src/node",
    "crates/rbuilder/src/test_utils",
    "crates/rbuilder/src/telemetry/metrics_macros",
    "crates/transaction-pool-bundle-ext"
]
resolver = "2"

# Like release, but with full debug symbols. Useful for e.g. `perf`.
[profile.debug-fast]
inherits = "release"
debug = true

[profile.maxperf]
inherits = "release"
lto = "fat"
codegen-units = 1
incremental = false

[patch."https://github.com/paradigmxyz/reth"]
reth-bench = { path = "/Users/liamaharon/grimoire/reth/bin/reth-bench" }
reth-cli-runner = { path = "/Users/liamaharon/grimoire/reth/crates/cli/runner" }
reth-tasks = { path = "/Users/liamaharon/grimoire/reth/crates/tasks" }
reth-metrics = { path = "/Users/liamaharon/grimoire/reth/crates/metrics" }
reth-metrics-derive = { path = "/Users/liamaharon/grimoire/reth/crates/metrics/metrics-derive" }
reth-db = { path = "/Users/liamaharon/grimoire/reth/crates/storage/db" }
reth-db-api = { path = "/Users/liamaharon/grimoire/reth/crates/storage/db-api" }
reth-codecs = { path = "/Users/liamaharon/grimoire/reth/crates/storage/codecs" }
reth-codecs-derive = { path = "/Users/liamaharon/grimoire/reth/crates/storage/codecs/derive" }
reth-db-models = { path = "/Users/liamaharon/grimoire/reth/crates/storage/db-models" }
reth-primitives = { path = "/Users/liamaharon/grimoire/reth/crates/primitives" }
reth-chainspec = { path = "/Users/liamaharon/grimoire/reth/crates/chainspec" }
reth-ethereum-forks = { path = "/Users/liamaharon/grimoire/reth/crates/ethereum-forks" }
reth-network-peers = { path = "/Users/liamaharon/grimoire/reth/crates/net/peers" }
reth-primitives-traits = { path = "/Users/liamaharon/grimoire/reth/crates/primitives-traits" }
reth-trie-common = { path = "/Users/liamaharon/grimoire/reth/crates/trie/common" }
reth-optimism-chainspec = { path = "/Users/liamaharon/grimoire/reth/crates/optimism/chainspec" }
reth-static-file-types = { path = "/Users/liamaharon/grimoire/reth/crates/static-file/types" }
reth-prune-types = { path = "/Users/liamaharon/grimoire/reth/crates/prune/types" }
reth-stages-types = { path = "/Users/liamaharon/grimoire/reth/crates/stages/types" }
reth-storage-errors = { path = "/Users/liamaharon/grimoire/reth/crates/storage/errors" }
reth-fs-util = { path = "/Users/liamaharon/grimoire/reth/crates/fs-util" }
reth-libmdbx = { path = "/Users/liamaharon/grimoire/reth/crates/storage/libmdbx-rs" }
reth-mdbx-sys = { path = "/Users/liamaharon/grimoire/reth/crates/storage/libmdbx-rs/mdbx-sys" }
reth-nippy-jar = { path = "/Users/liamaharon/grimoire/reth/crates/storage/nippy-jar" }
reth-tracing = { path = "/Users/liamaharon/grimoire/reth/crates/tracing" }
reth-node-api = { path = "/Users/liamaharon/grimoire/reth/crates/node/api" }
reth-engine-primitives = { path = "/Users/liamaharon/grimoire/reth/crates/engine/primitives" }
reth-payload-primitives = { path = "/Users/liamaharon/grimoire/reth/crates/payload/primitives" }
reth-chain-state = { path = "/Users/liamaharon/grimoire/reth/crates/chain-state" }
reth-errors = { path = "/Users/liamaharon/grimoire/reth/crates/errors" }
reth-blockchain-tree-api = { path = "/Users/liamaharon/grimoire/reth/crates/blockchain-tree-api" }
reth-consensus = { path = "/Users/liamaharon/grimoire/reth/crates/consensus/consensus" }
reth-execution-errors = { path = "/Users/liamaharon/grimoire/reth/crates/evm/execution-errors" }
reth-execution-types = { path = "/Users/liamaharon/grimoire/reth/crates/evm/execution-types" }
reth-trie = { path = "/Users/liamaharon/grimoire/reth/crates/trie/trie" }
reth-provider = { path = "/Users/liamaharon/grimoire/reth/crates/storage/provider" }
reth-evm = { path = "/Users/liamaharon/grimoire/reth/crates/evm" }
reth-network-p2p = { path = "/Users/liamaharon/grimoire/reth/crates/net/p2p" }
reth-eth-wire-types = { path = "/Users/liamaharon/grimoire/reth/crates/net/eth-wire-types" }
reth-network-types = { path = "/Users/liamaharon/grimoire/reth/crates/net/network-types" }
reth-net-banlist = { path = "/Users/liamaharon/grimoire/reth/crates/net/banlist" }
reth-storage-api = { path = "/Users/liamaharon/grimoire/reth/crates/storage/storage-api" }
reth-trie-db = { path = "/Users/liamaharon/grimoire/reth/crates/trie/db" }
reth-testing-utils = { path = "/Users/liamaharon/grimoire/reth/testing/testing-utils" }
reth-rpc-types = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-types" }
reth-transaction-pool = { path = "/Users/liamaharon/grimoire/reth/crates/transaction-pool" }
reth-network-api = { path = "/Users/liamaharon/grimoire/reth/crates/net/network-api" }
reth-tokio-util = { path = "/Users/liamaharon/grimoire/reth/crates/tokio-util" }
reth-payload-builder = { path = "/Users/liamaharon/grimoire/reth/crates/payload/builder" }
reth-ethereum-engine-primitives = { path = "/Users/liamaharon/grimoire/reth/crates/ethereum/engine-primitives" }
reth-evm-ethereum = { path = "/Users/liamaharon/grimoire/reth/crates/ethereum/evm" }
reth-ethereum-consensus = { path = "/Users/liamaharon/grimoire/reth/crates/ethereum/consensus" }
reth-consensus-common = { path = "/Users/liamaharon/grimoire/reth/crates/consensus/common" }
reth-revm = { path = "/Users/liamaharon/grimoire/reth/crates/revm" }
reth-rpc-types-compat = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-types-compat" }
reth-rpc-eth-api = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-eth-api" }
reth-rpc-eth-types = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-eth-types" }
reth-rpc-server-types = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-server-types" }
reth-node-core = { path = "/Users/liamaharon/grimoire/reth/crates/node/core" }
reth-cli-util = { path = "/Users/liamaharon/grimoire/reth/crates/cli/util" }
reth-config = { path = "/Users/liamaharon/grimoire/reth/crates/config" }
reth-discv4 = { path = "/Users/liamaharon/grimoire/reth/crates/net/discv4" }
reth-net-nat = { path = "/Users/liamaharon/grimoire/reth/crates/net/nat" }
reth-discv5 = { path = "/Users/liamaharon/grimoire/reth/crates/net/discv5" }
reth-network = { path = "/Users/liamaharon/grimoire/reth/crates/net/network" }
reth-dns-discovery = { path = "/Users/liamaharon/grimoire/reth/crates/net/dns" }
reth-ecies = { path = "/Users/liamaharon/grimoire/reth/crates/net/ecies" }
reth-eth-wire = { path = "/Users/liamaharon/grimoire/reth/crates/net/eth-wire" }
reth-rpc-api = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-api" }
reth = { path = "/Users/liamaharon/grimoire/reth/bin/reth" }
reth-basic-payload-builder = { path = "/Users/liamaharon/grimoire/reth/crates/payload/basic" }
reth-beacon-consensus = { path = "/Users/liamaharon/grimoire/reth/crates/consensus/beacon" }
reth-payload-validator = { path = "/Users/liamaharon/grimoire/reth/crates/payload/validator" }
reth-prune = { path = "/Users/liamaharon/grimoire/reth/crates/prune/prune" }
reth-exex-types = { path = "/Users/liamaharon/grimoire/reth/crates/exex/types" }
reth-stages = { path = "/Users/liamaharon/grimoire/reth/crates/stages/stages" }
reth-etl = { path = "/Users/liamaharon/grimoire/reth/crates/etl" }
reth-exex = { path = "/Users/liamaharon/grimoire/reth/crates/exex/exex" }
reth-stages-api = { path = "/Users/liamaharon/grimoire/reth/crates/stages/api" }
reth-static-file = { path = "/Users/liamaharon/grimoire/reth/crates/static-file/static-file" }
reth-blockchain-tree = { path = "/Users/liamaharon/grimoire/reth/crates/blockchain-tree" }
reth-trie-parallel = { path = "/Users/liamaharon/grimoire/reth/crates/trie/parallel" }
reth-db-common = { path = "/Users/liamaharon/grimoire/reth/crates/storage/db-common" }
reth-downloaders = { path = "/Users/liamaharon/grimoire/reth/crates/net/downloaders" }
reth-cli-commands = { path = "/Users/liamaharon/grimoire/reth/crates/cli/commands" }
reth-node-builder = { path = "/Users/liamaharon/grimoire/reth/crates/node/builder" }
reth-auto-seal-consensus = { path = "/Users/liamaharon/grimoire/reth/crates/consensus/auto-seal" }
reth-consensus-debug-client = { path = "/Users/liamaharon/grimoire/reth/crates/consensus/debug-client" }
reth-rpc-builder = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-builder" }
reth-ipc = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/ipc" }
reth-rpc = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc" }
reth-rpc-engine-api = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-engine-api" }
reth-rpc-layer = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-layer" }
reth-engine-service = { path = "/Users/liamaharon/grimoire/reth/crates/engine/service" }
reth-engine-tree = { path = "/Users/liamaharon/grimoire/reth/crates/engine/tree" }
reth-engine-util = { path = "/Users/liamaharon/grimoire/reth/crates/engine/util" }
reth-node-events = { path = "/Users/liamaharon/grimoire/reth/crates/node/events" }
reth-node-metrics = { path = "/Users/liamaharon/grimoire/reth/crates/node/metrics" }
reth-ethereum-payload-builder = { path = "/Users/liamaharon/grimoire/reth/crates/ethereum/payload" }
reth-node-ethereum = { path = "/Users/liamaharon/grimoire/reth/crates/ethereum/node" }
reth-e2e-test-utils = { path = "/Users/liamaharon/grimoire/reth/crates/e2e-test-utils" }
reth-node-optimism = { path = "/Users/liamaharon/grimoire/reth/crates/optimism/node" }
reth-evm-optimism = { path = "/Users/liamaharon/grimoire/reth/crates/optimism/evm" }
reth-optimism-consensus = { path = "/Users/liamaharon/grimoire/reth/crates/optimism/consensus" }
reth-optimism-payload-builder = { path = "/Users/liamaharon/grimoire/reth/crates/optimism/payload" }
reth-optimism-rpc = { path = "/Users/liamaharon/grimoire/reth/crates/optimism/rpc" }
reth-optimism-cli = { path = "/Users/liamaharon/grimoire/reth/crates/optimism/cli" }
reth-cli = { path = "/Users/liamaharon/grimoire/reth/crates/cli/cli" }
reth-optimism-primitives = { path = "/Users/liamaharon/grimoire/reth/crates/optimism/primitives" }
reth-ethereum-cli = { path = "/Users/liamaharon/grimoire/reth/crates/ethereum/cli" }
reth-exex-test-utils = { path = "/Users/liamaharon/grimoire/reth/crates/exex/test-utils" }
reth-rpc-api-testing-util = { path = "/Users/liamaharon/grimoire/reth/crates/rpc/rpc-testing-util" }
example-beacon-api-sidecar-fetcher = { path = "/Users/liamaharon/grimoire/reth/examples/beacon-api-sidecar-fetcher" }
example-beacon-api-sse = { path = "/Users/liamaharon/grimoire/reth/examples/beacon-api-sse" }
example-bsc-p2p = { path = "/Users/liamaharon/grimoire/reth/examples/bsc-p2p" }
example-custom-dev-node = { path = "/Users/liamaharon/grimoire/reth/examples/custom-dev-node" }
example-custom-engine-types = { path = "/Users/liamaharon/grimoire/reth/examples/custom-engine-types" }
example-custom-evm = { path = "/Users/liamaharon/grimoire/reth/examples/custom-evm" }
example-custom-inspector = { path = "/Users/liamaharon/grimoire/reth/examples/custom-inspector" }
example-custom-node-components = { path = "/Users/liamaharon/grimoire/reth/examples/custom-node-components" }
example-custom-payload-builder = { path = "/Users/liamaharon/grimoire/reth/examples/custom-payload-builder" }
example-custom-rlpx-subprotocol = { path = "/Users/liamaharon/grimoire/reth/examples/custom-rlpx-subprotocol" }
example-db-access = { path = "/Users/liamaharon/grimoire/reth/examples/db-access" }
example-manual-p2p = { path = "/Users/liamaharon/grimoire/reth/examples/manual-p2p" }
example-network-txpool = { path = "/Users/liamaharon/grimoire/reth/examples/network-txpool" }
example-network = { path = "/Users/liamaharon/grimoire/reth/examples/network" }
example-node-custom-rpc = { path = "/Users/liamaharon/grimoire/reth/examples/node-custom-rpc" }
example-node-event-hooks = { path = "/Users/liamaharon/grimoire/reth/examples/node-event-hooks" }
example-polygon-p2p = { path = "/Users/liamaharon/grimoire/reth/examples/polygon-p2p" }
example-rpc-db = { path = "/Users/liamaharon/grimoire/reth/examples/rpc-db" }
example-stateful-precompile = { path = "/Users/liamaharon/grimoire/reth/examples/stateful-precompile" }
example-txpool-tracing = { path = "/Users/liamaharon/grimoire/reth/examples/txpool-tracing" }
ef-tests = { path = "/Users/liamaharon/grimoire/reth/testing/ef-tests" }

[workspace.package]
version = "0.1.0"
edition = "2021"

[workspace.dependencies]
reth = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-chain-state = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-beacon-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-db = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-db-common = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-libmdbx = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-payload-builder = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-api = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-trie = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-trie-parallel = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-transaction-pool = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-basic-payload-builder = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-core = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-builder = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-optimism-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-auto-seal-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-primitives = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-provider = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6", features = ["test-utils"] }
reth-chainspec = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-execution-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-revm = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-evm = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-evm-ethereum = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-evm-optimism = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-tracing = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc-types-compat = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc-eth-api = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc-eth-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc-api-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-discv4 = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-discv5 = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-network = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-cli-util = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-optimism = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-eth-wire-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-storage-api = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-optimism-rpc = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-optimism-payload-builder = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-optimism-chainspec = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }

# version is copied from reth  "v1.0.6" dependencies
revm = { version = "14.0.0", features = [
    "std",
    "secp256k1",
    "optional_balance_check",
], default-features = false }
revm-inspectors = "0.6"
revm-primitives = { version = "9.0.0", features = [
    "std",
], default-features = false }

ethereum_ssz_derive = "0.7"
ethereum_ssz = "0.7"

alloy-primitives = { version = "0.8.0", default-features = false }
alloy-rlp = "0.3.4"
alloy-chains = "0.1.23"
alloy-provider = { version = "0.3.0", features = ["ipc", "pubsub"] }
alloy-pubsub = { version = "0.3.0" }
alloy-eips = { version = "0.3.0" }
alloy-rpc-types = { version = "0.3.0" }
alloy-json-rpc = { version = "0.3.0" }
alloy-transport-http = { version = "0.3.0" }
alloy-network = { version = "0.3.0" }
alloy-transport = { version = "0.3.0" }
alloy-node-bindings = { version = "0.3.0" }
alloy-consensus = { version = "0.3.0", features = ["kzg"] }
alloy-serde = { version = "0.3.0" }
alloy-rpc-types-beacon = { version = "0.3.0", features = [
    "ssz",
] }
alloy-rpc-types-engine = { version = "0.3.0", features = [
    "ssz",
] }
alloy-rpc-types-eth = { version = "0.3.0" }
alloy-signer-local = { version = "0.3.0" }
alloy-genesis = { version = "0.3.0" }

async-trait = { version = "0.1.83" }
clap = { version = "4.4.3" }
thiserror = { version = "1.0.64" }
eyre = { version = "0.6.12" }
tracing = { version = "0.1.37" }
jsonrpsee = { version = "0.24.4" }
jsonrpsee-types = { version = "0.24.4" }
parking_lot = { version = "0.12.3" }
tokio = { version = "1.40.0" }
auto_impl = { version = "1.2.0" }
reqwest = { version = "0.12.8" }
serde = { version = "1.0.210" }
serde_json = { version = "1.0.128" }
clap_builder = { version = "4.5.19" }
derive_more = { version = "1" }


